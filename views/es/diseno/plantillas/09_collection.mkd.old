---
:title: collection.html
:description: Plantilla para colecciones de productos
:keywords: liquid, colección, productos, listas, grupos, pagination, typed_collection_path, tagged_collection_path
---

# Collection.html

Esta plantilla es opcional y es usada para colecciones de productos creadas en el panel de administración de tu tienda.

Si esta plantilla no existe, tus colecciones y listas de productos usarán la plantilla base [products.html](/es/themes/products).

Si creas esta plantilla (de tipo HTML y nombre "collection"), será usada por tu tienda en cualquier URL que muestre una colección de productos. Estas incluyen:

<table class="list" cellpadding="0" cellspacing="0">
  <thead>
    <tr>
      <th style="width:30%">Caso</th>
      <th style="width:30%">URLs</th>
      <th style="width:40%">&nbsp;</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Colleción de productos</th>
      <td><code>/collections/destacados</code>, <code>/collections/electronica</code>, etc.</td>
      <td><small>cualquier colección de productos</small></td>
    </tr>
    <tr>
      <th>Colleción filtrada por un tipo</th>
      <td><code>/collections/hombre/types/camisas</code></td>
      <td><small>cualquier colección de productos filtrada por un tipo</small></td>
    </tr>
    <tr>
      <th>Colleción filtrada por una etiqueta</th>
      <td><code>/collections/hombre/tags/rojo</code></td>
      <td><small>cualquier colección de productos filtrada por una etiqueta</small></td>
    </tr>
    <tr>
      <th>Colleción filtrada por tipo y etiqueta</th>
      <td><code>/collections/hombre/types/camisas/tags/rojo</code></td>
      <td><small>cualquier colección de productos filtrada por un tipo y una etiqueta</small></td>
    </tr>
  </tbody>
</table>

Igual que la plantilla <code>products.html</code>, esta plantilla siempre tiene un objeto <code>products</code> disponible. Este  objeto contiene los productos dentro de la colección actual (con o sin filtros dependiendo de la URL) que pueden ser paginados.

<pre>:::html
{% paginate products by 5 %}
  {% for product in paginated_list %}
    <li class="clearfix">
      <!-- shows a 'new' badge if product is tagged with 'new' -->

      <a href="{{ product.url }}" class="product-image">
        <img src="{{ product.first_image.small }}" alt="{{ product.title }}" />
      </a>

      <h3 class="product-model">
        <a href="{{ product.url }}" title="{{ product.title }}">{{ product.title | truncate:26 }}</a>
      </h3>

      {% unless product.price.zero %}
        <small class="product-price">{{ product.price.format }}</small>
      {% endunless %}

      {% if product.vendor != shop.name %}
        <span class="product-vendor">{{ product.vendor }}</span>
      {% endif %}

    </li>
  {% endfor %}
  {{ paginated_list | pagination }}
{% endpaginate %}
</pre>

Ver [products.html](/es/themes/products) para más detalles y ejemplos.

## Objeto *collection*

Además, <code>collection.html</code> expone el objeto <code>collection</code>, que representa a la colección actual y todos sus atributos. Por ejemplo, para mostrar el título y texto personalizado de la colección:

<pre>:::html
<h2>{{ collection.title }}</h2>

<div class="entry">
  {{ collection.body }}
</div><!-- /entry -->
</pre>

La lista total de atributos de una colección es:

* title - título dado a la colección en el panel de administración
* body - texto o descripción, incluyendo HTML, links e imágenes.
* slug - "manilla" única de la colección. Por ejemplo "productos-destacados"
* product_types - lista de tipos de productos presentes en colección actual
* tags - lista de etiquetas presentes en colección actual

## Listando tipos dentro de una colección con *collection.product_types*

<code>collection.product_types</code> es una lista de todos los tipos de producto de los productos dentro de la colección. Es útil para construir menus de tipos para cada colección. Por ejemplo, una colección "moda femenina" podría tener los tipos "blusas", "lencería", "zapatos", "accesorios", etc. Cada tipo podría ser un link a la misma colección filtrada por el tipo, generando URLs del estilo <code>/collections/moda-femenina/types/lenceria</code>.

<pre>:::html
<div class="tipos">
  {% for tipo in collection.product_types %}
  <a href="{{ collection | typed_collection_path:tipo }}">{{ tipo.name }}</a>
  {% endfor %}
</div>
</pre>

En el ejemplo estamos usando el filtro <code>typed_collection_path</code>, que genera la URL de una colección filtrada por tipo. Eso es equivalente a escribir el siguiente código manualmente:

<pre>:::html
...
  <a href="/collections/{{ collection.slug }}/types/{{ tipo.slug }}">{{ tipo.name }}</a>
...
</pre>

## Listando etiquetas dentro de una colección con *collection.tags*

Esto es similar al ejemplo usando tipos de productos. <code>collection.tags</code> es una lista de etiquetas presentes en los productos de la colección. Por ejemplo, las etiquetas podrían ser "rojo", "amarillo", "verde", o "algodón", "mezclilla", etc. En el siguiente ejempl usamos el filtro <code>tagged_collection_path</code> para generar URLs de estilo <code>/collection/moda-femenina/tags/mezclilla</code>

<pre>:::html
<div class="etoquetas">
  {% for tag in collection.tags %}
  <a href="{{ collection | tagged_collection_path:tag }}">{{ tag.name }}</a>
  {% endfor %}
</div>
</pre>

## Relacionado

* [products.html](/es/themes/products)
