---
:title: Products.html
:description: Plantilla para listas y colecciones de productos.
:keywords: liquid, producto, products, plantilla, html, css, thumbnail, product_type, variants, price, precio, variantes, archivos, colecciones, loop, parcial
---

# Products.html

Esta es la plantilla usada por Bootic para mostrar listas y colecciones de productos. Algunos casos donde se muestra esta plantilla son:

<table class="list" cellpadding="0" cellspacing="0">
  <thead>
    <tr>
      <th style="width:30%">Caso</th>
      <th style="width:30%">URLs</th>
      <th style="width:40%">&nbsp;</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Todos los productos</th>
      <td><code>/products</code></td>
      <td><small>catálogo completo (todos los productos visibles de tu tienda)</small></td>
    </tr>
    <tr>
      <th>Colleción de productos</th>
      <td><code>/collections/destacados</code>, <code>/collections/electronica</code>, etc.</td>
      <td><small>cualquier colección de productos</small></td>
    </tr>
    <tr>
      <th>Tipo de productos</th>
      <td><code>/types/mesas</code>, <code>/types/alimentos-para-gatos</code>, etc.</td>
      <td><small>cualquier tipo de productos</small></td>
    </tr>
    <tr>
      <th>Colleción filtrada por un tipo</th>
      <td><code>/collections/hombre/types/camisas</code></td>
      <td><small>cualquier colección de productos filtrada por un tipo</small></td>
    </tr>
    <tr>
      <th>Colleción filtrada por una etiqueta</th>
      <td><code>/collections/hombre/tags/rojo</code></td>
      <td><small>cualquier colección de productos filtrada por una etiqueta</small></td>
    </tr>
    <tr>
      <th>Colleción filtrada por tipo y etiqueta</th>
      <td><code>/collections/hombre/types/camisas/tags/rojo</code></td>
      <td><small>cualquier colección de productos filtrada por un tipo y una etiqueta</small></td>
    </tr>
  </tbody>
</table>

la plantilla <code>products.html</code> siempre tiene disponible una lista de productos en el objeto <code>products</code>. Normalmente querras usar [paginación](/es/themes/pagination) para mostrar tus productos en varias páginas, ya que esa lista pudiera tener muchos productos (por ejemplo en el caso de <code>/products</code>, que muestra todos los productos visibles de tu tienda).

<pre>:::html
  {% paginate products by 5 %}
    {% for product in paginated_list %}
      <li class="item-{{ product_item_counter }} clearfix">
        <!-- shows a 'new' badge if product is tagged with 'new' -->

        <a href="{{ product.url }}" class="product-image">
          <img src="{{ product.first_image.small }}" alt="{{ product.title }}" />
        </a>

        <h3 class="product-model">
          <a href="{{ product.url }}" title="{{ product.title }}">{{ product.title | truncate:26 }}</a>
        </h3>

        {% unless product.price.zero %}
          <small class="product-price">{{ product.price.format }}</small>
        {% endunless %}

        {% if product.vendor != shop.name %}
          <span class="product-vendor">{{ product.vendor }}</span>
        {% endif %}

      </li>
    {% endfor %}
    {{ paginated_list | pagination }}
  {% endpaginate %}
</pre>

En este caso hacemos un *loop* sobre la lista de productos <code>products</code> y generamos HTML para cada producto, mostrando detalles básicos de cada uno como título, imagen pequeña, precio y fabricante.

<div class="tip">
  En este ejemplo mostramos la imagen pequeña por defecto de cada producto (product.first_image.small), pero también es posible mostrar <a href="/es/themes/imagenes#resize">tamaños personalizados de imágenes</a>
</div>

## Reutilizando HTML de detalle de producto con la etiqueta *loop*

A veces el HTML de cada producto en <code>products.html</code> es similar o igual al de la plantilla de detalle de un producto en <code>product.html</code> o en otras listas de productos como <code>collection.html</code>. En estos casos puedes crear una plantilla nueva HTML (por ejemplo "product_item.html") cuya función es mostrar los datos de cada producto en distintas páginas.

<pre>:::html
  <li class="item-{{ product_item_counter }} clearfix">
    <!-- shows a 'new' badge if product is tagged with 'new' -->
    {{ '<div class="new-product"></div>' | print_if_included: 'new', product_item.tag_list }}

    <div class="image-centerer">
      <a href="{{ product_item.url }}" class="product-image">
        <img src="{{ product_item.first_image.small }}" alt="{{ product_item.title }}" />
      </a>
    </div>

    <h3 class="product-model">
      <a href="{{ product_item.url }}" title="{{ product_item.title }}">{{ product_item.title | truncate:26 }}</a>
    </h3>

    {% unless product_item.price.zero %}
      <small class="product-price">{{ product_item.price.format }}</small>
    {% endunless %}

    {% if product_item.vendor != shop.name %}
      <span class="product-vendor">{{ product_item.vendor }}</span>
    {% endif %}
  </li>
</pre>

A continuación, nuestro *loop* de productos en <code>products.html</code> o <code>collection.html</code> usamos la etiqueta especial *loop* para llamar nuestra plantilla <code>product_item.html</code> con cada producto en la lista:

<pre>:::html
  {% paginate products by 20 %}
    <ul class="products clearfix">
    {% loop paginated_list in 'product_item' %}
    </ul>
    {{ paginated_list | pagination }}
  {% endpaginate %}
</pre>

De esta manera podemos re-utilizar el mismo HTML para productos desde distintas plantillas. Estas plantillas reutilizables a veces son llamadas "parciales", porque muestran sólo una parte de la información de una página.

Nótese que el nombre de la variable para cada producto en <code>product_item</code> es "product_item" en lugar de "product". Esto es porque la etiqueta *loop* asigna cada producto a una variable con el mismo nombre de la plantilla parcial.

## Relacionados:

* [Paginación de productos](/es/themes/pagination)
* [product.html](/es/themes/product)
* [Tamaños personalizados de imágenes de productos](/es/themes/imagenes#resize)