---
:title: Product.html
:description: Plantilla para ficha de producto en Bootic
:keywords: liquid, producto, plantilla, html, css, imágenes, add_to_cart, has_images, thumbnail, small, medium, large, tags, files, product_type, variants, price, precio, variantes, archivos, colecciones, upload, pdf
---

# Product.html

Esta plantilla representa a la ficha de un sólo producto en tu tienda. Los datos e imágenes de cada producto los editas en la sección "productos" de la interfaz de administración de tu tienda.

En la plantilla <code>product.html</code> tienes un objeto <code>product</code> con atributos que puedes usar, por ejemplo:

<ul>
  <li><code>product.title</code> - el título o modelo, sinónimo de <code>product.model</code></li>
  <li><code>product.description</code> - la descripción</li>
  <li><code>product.vendor</code> - la marca o fabricante</li>
  <li><code>product.tags</code> - lista de etiquetas del producto</li>
  <li><code>product.collections</code> - lista de colecciones del producto</li>
  <li><code>product.variants</code> - colección de variantes del producto</li>
  <li><code>product.images</code> - colección de imágenes asociadas al producto</li>
  <li><code>product.files</code> - colección de archivos (no imágenes) del producto</li>
  <li><code>product.product_type</code> - tipo de producto con campos personalizados</li>
  <li><code>product.price</code> - precio del producto</li>
</ul>

También existe la etiqueta especial <code>add_to_cart</code> que genera el html del botón para agregar al carro de compra.

## Mostrando imágenes de un producto

La colección <code>product.images</code> contiene las imágenes subidas a un producto por los administradores de la tienda.

Cada imagen tiene atributos que puedes usar para construir una galería o simplemente mostrar la primera.

El siguiente ejemplo muestra las 2 primeras imágenes del producto.

<pre>:::html
{% if product.has_images %}
  <div id="ficha-right" class="clearfix">
    <!-- big images (2) -->
    <ul id="img-big" class="assets clearfix">
      {% for image in product.images limit:2 %}
      <li class="img-big-{{ forloop.index }}">
        <a href="{{ image.large }}" title="{{product.model}}'s details" rel="lightbox[ficha]">
          <img src="{{ image.small }}" alt="{{ product.model }}" />
        </a>
      </li>
      {% endfor %}
    </ul>
    <!-- /big images -->
  </div>
{% endif %}
</pre>

Cada imagen muestra el tamaño "small" (240x180px) dentro de un link que apunta a la versión "large" (800x600px). Esto es útil para usar librerías JavaScript para galerías de imágenes (como las excelentes <a href="http://www.huddletogether.com/projects/lightbox2/">Lightbox</a> o  <a href="http://fancybox.net/">FancyBox</a>) o simplemente mostra la imagen grande en el navegador.

El fragmento a continuación muestra el resto de las imágenes de un producto (si es que tiene) en un tamaño menor ("thumbnail", de 75x75px).

<pre>:::html
{% if product.images | size > 2 %}
<!-- small images -->
<ul id="img-small" class="assets clearfix">
  {% for image in product.images offset: 2 %}
  <li>
    <a href="{{ image.large }}" title="{{product.model}}'s details" rel="lightbox[ficha]">
      <img src="{{ image.thumbnail }}" alt="{{ product.model }}" />
    </a>
  </li>
  {% endfor %}
</ul>
<!-- /small images -->
{% endif %}
</pre>

Cada imagen de producto tiene los siguientes tamaños predefinidos:

<ul>
  <li><code>thumbnail</code>: 75x75</li>
  <li><code>small</code>: 240x180</li>
  <li><code>medium</code>: 500x375</li>
  <li><code>large</code>: 800x600</li>
</ul>

Además de los tamaños predefinidos, puedes asignar dimensiones personalizadas a imágenes de productos usando el filtro <code>resize</code>.

<pre>:::html
<img src="{{ image | resize: '100x100#c' }}" alt="{{ product.model }}" />
</pre>

El ejemplo anterior crea un cuadrado de 100x100 px, centrado, a partir de la imagen de un producto.

<div class="tip">
  Para saber más sobre tamaños personalizados de imágenes de productos, lee la sección en "<a href="/es/themes/imagenes#resize">trabajando con imágenes</a>".
</div>

## Otros archivos

También puedes subir otro tipo de archivos a cada producto (por ejemplo, una ficha en formato PDF).

Para mostrarlos, escribe un <em>loop</em> que recorra la colección <code>product.files</code>.

<pre>:::html
<!-- archivos -->
{% if product.has_files %}
  <ul class="files">
    {% for file in product.files %}
      <li>
        <a href="{{ file.url }}" class="file {{ file.extension }}">{{ file.file_name }}</a>
        </li>
    {% endfor %}
  </ul>
{% endif %}
<!-- /archivos -->
</pre>

Cada archivo tiene los siguientes atributos:

<ul>
  <li><code>url</code>: URL del archivo original</li>
  <li><code>extension</code>: extensión del archivo, (pdf, xls, etc)</li>
  <li><code>file_name</code>: nombre original del archivo</li>
  <li><code>title</code>: título opcional asignado al subir</li>
  <li><code>description</code>: descripción opcional asignada al subir</li>
</ul>

<h2 id="variantes">Variantes y botón de compra</h2>

La etiqueta <code>{% add_to_cart %}</code> genera un formulario HTML prediseñado con la lista de variantes del producto, un campo para ingresar la cantidad de unidades y un botón para guardar la variante y cantidad elegida en el carro de compras.

<div class="clearfix">
<div class="column">
<pre>:::html
<div id="agregar_al_carro">
  {% add_to_cart %}
</div>
</pre>
</div>

<img src="/img/themes/add_to_cart.png" alt="Agregar al carro de compras" class="right" />
</div>

La etiqueta también revisa el estado de cada variante y deshabilita las que esten fuera de "stock". Normalmente esta etiqueta es suficiente para la mayoría de los casos. Con un poco de CSS puedes cambiar el estilo de los elementos generados.

## Listando variantes

También puedes usar la colección <code>product.variants</code> para listar las variantes fuera del formulario o en otro contexto.

<pre>:::html
<ul class="variantes">
  {% for variant in product.variants %}
  <li class="v-{{ variant.title }}">
    <span class="color">{{ variant.title }}</span>
    <h4>{{ variant.title }}</h4>
  </li>
  {% endfor %}
</ul>
</pre>

En el ejemplo anterior usamos el título de cada variante como valor del atributo <code>class</code> de cada elemento. Con un poco de CSS podemos usar la lista de variantes para mostrar una paleta de colores disponibles.

Asumiendo que nuestros productos tienen variantes llamadas "rojo", "azul", "verde" y "cafe":

<div class="clearfix">
<div class="column">
<pre>:::css
.variantes li {
  margin-bottom: 4px;
}
.variantes .color {
  display: inline-block;
  width: 20px;
  height: 20px;
  box-shadow: 1px 2px 3px #888;
  text-indent: -500px;
  overflow: hidden;
  margin-right: 5px
}
.variantes h4 { display: inline-block; }
.v-rojo .color {background-color: red;}
.v-azul .color {background-color: blue;}
.v-verde .color {background-color: green;}
.v-naranjo .color {background-color: orange;}
</pre>
</div>
<img src="/img/themes/variants1.png" alt="Variantes personalizadas" class="right" />
</div>

Otras opciones son usar los nombres de variantes para cargar imágenes, etc.

## Lista de variantes y botón de compra personalizado

El siguiente ejemplo muestra cómo construir una lista de variantes dentro del formulario "agregar al carro" de forma personalizada. Lee los comentarios en el código para entender cada parte.

<pre>:::html

<!-- Formulario para agregar productos al carro. Los campos requeridos son:
     - cart_item[product_id] ID del producto actual
     - cart_item[variant_id] ID de variante elegida
     - cart_item[quantity] cantidad de unidades a agregar -->

<!-- La variable {{ add_to_cart_url }} genera la URL necesaria para agregar productos al carro -->
<form class="add_to_cart" action="{{ add_to_cart_url }}" method="post">

  <input type="hidden" name="cart_item[product_id]" value="{{ product.id }}" />
  <p>

<!-- Solo mostramos las opciones en caso de que haya mas de una variante para elegir -->

    {% if product.variants.size > 1 %}
    <select name="cart_item[variant_id]">

<!-- variant.is_available nos permite saber si la variante esta disponible.
     Si no lo esta, deshabilitamos el campo (en vez de simplemente no mostrarlo) -->

    {% for variant in product.variants %}
      <option value="{{ variant.id }}" id="i-{{ variant.id }}"
        {% unless variant.is_available %} disabled="disabled"{% endunless %}
      >{{ variant.title }}</option>
    {% else %}

<!-- Solo hay una variante disponible, asi que incluimos su ID en un campo oculto -->
      <input type="hidden" name="cart_item[variant_id]" value="{{ product.variants.first.id }}" />

    {% endfor %}

    </select>
    {% endif %}

    <!-- Cantidad (unidades) -->
    <input type="text" id="cart_item_quantity" name="cart_item[quantity]" value="1" />
    <!-- Botón de envío al carro -->
    <input type="submit" value="Agregar al carro" />

  </p>
</form>
</pre>

<h2 id="collections">Colecciones</h2>

Puedes usar <code>product.collections</code> para listar las colecciones a las que el producto pertenece.

<pre>:::html
{% if product.has_collections %}
  <h2>Colecciones</h2>
  <ul class="colecciones">
    {% for collection in product.collections %}
    <li>
      <a href="{{ collection.url }}">{{ collection.title }}</a>
    </li>
    {% endfor %}
  </ul>
{% endif %}
</pre>

También puedes acceder a una colección en particular usando su "manilla"* o título normalizado:

<pre>:::html
{% if product.collections.catalogo %}
<p>
 Este producto está en la colección {{ product.collections.catalogo.title }}!
</p>
{% endif %}
</pre>

<div class="tip">
  <strong>*</strong> Una <em>manilla</em> es la versión sin tildes, mayúsculas ni espacios del título de una colección, producto, página u otro objeto en Bootic. Por ejemplo si el título de una colección es "Catálogo 2011", su manilla es "catalogo-211".
</div>

<h2 id="tags">Etiquetas</h2>

Al igual que con las colecciones, puedes usar <code>product.tags</code> para listar las etiquetas a las que el producto pertenece.

<pre>:::html
{% if product.has_tags %}
  <h2>Etiquetas</h2>
  <ul class="colecciones">
    {% for tag in product.tags %}
    <li>
      <a href="{{ tag.url }}">{{ tag.name }}</a>
    </li>
    {% endfor %}
  </ul>
{% endif %}
</pre>

También puedes acceder a una etiqueta en particular usando su "manilla"* o nombre normalizado:

<pre>:::html
{% if product.tags.destacados %}
<p>
 Este producto tiene la etiqueta {{ product.tags.destacados.name }}!
</p>
{% endif %}
</pre>

## Temas relacionados:

<ul>
  <li><a href="/es/themes/productos_similares">mostrando productos similares</a></li>
</ul>
